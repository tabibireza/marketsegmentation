seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
head(seg_data)
# kmeans clustring
# specify in advance the number of clusters
projectdir <- "E:/towork/study/r-studio/projects/marketsegmentation"
setwd(projectdir)
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
View(seg_data)
# Latent class clust
# aims to maximize the likelihood
library(mclust)
library(NbClust)
projectdir <- "C:/rezawork/study/r-studio/edx-marketing analytics/week2-marketsegmentation"
setwd(projectdir)
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
head(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
# Find the optimal model
set.seed(1990)
View(std_seg_data)
mclustBIC(std_seg_data[,1:5],verbose=F)
# obtain more details about the optimal model and mclust
set.seed(1990)
lca_clust <- Mclust(std_seg_data[,1:5],verbose = FALSE)
summary(lca_clust)
# interpret each cluster and rename
lca_clusters <- lca_clust$classification
lca_clust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")],by=list(lca_clusters),FUN=mean)
View(lca_clust)
lca_clust_summary
lca_clusters<-factor(lca_clusters,levels = c(1,2),labels = c("Reliability LCA", "Comfort LCA"))
CrossTable(seg_data$MBA,lca_clusters,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# Demographics
install.packages("gmodels")
library(gmodels)
CrossTable(seg_data$MBA,lca_clusters,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# Choice
CrossTable(lca_clusters,seg_data$Choice,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
# compare with Hierarchical Clustering
CrossTable(h_cluster,lca_clusters,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# compare with K-Means Clustering
CrossTable(Kmean_Cluster,lca_clusters,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# kmeans clustring
# specify in advance the number of clusters
projectdir <- "E:/towork/study/r-studio/projects/marketsegmentation"
setwd(projectdir)
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
head(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
#  algorithm works on our data for 3 segments
set.seed(1990)
car_Cluster3 <-kmeans(std_seg_data, 3, iter.max=100,nstart=100)
car_Cluster3
#  rename those clusters according to their characteristics
Kmean_Cluster<-factor(car_Cluster3$cluster,levels = c(1,2,3),labels = c("Perf. KM", "Comfort KM", "Appearance KM"))
# the optimal number of segments
install.packages("NbClust")
install.packages("NbClust")
library(NbClust)
set.seed(1990)
car_Cluster3 <-kmeans(std_seg_data, 3, iter.max=100,nstart=100)
car_Cluster3
#  rename those clusters according to their characteristics
Kmean_Cluster<-factor(car_Cluster3$cluster,levels = c(1,2,3),labels = c("Perf. KM", "Comfort KM", "Appearance KM"))
# the optimal number of segments
install.packages("NbClust")
install.packages("NbClust")
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="kmeans")
# Demographics
library(gmodels)
#  algorithm works on our data for 3 segments
set.seed(1990)
car_Cluster3 <-kmeans(std_seg_data, 3, iter.max=100,nstart=100)
car_Cluster3
#  rename those clusters according to their characteristics
Kmean_Cluster<-factor(car_Cluster3$cluster,levels = c(1,2,3),labels = c("Perf. KM", "Comfort KM", "Appearance KM"))
# the optimal number of segments
install.packages("NbClust")
install.packages("NbClust")
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="kmeans")
# Demographics
library(gmodels)
CrossTable(seg_data$MBA,Kmean_Cluster,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# Choice
CrossTable(Kmean_Cluster,seg_data$Choice,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
install.packages("NbClust")
install.packages("NbClust")
projectdir <- "E:/towork/study/r-studio/projects/marketsegmentation"
setwd(projectdir)
getwd()
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
head(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
dist <- dist(std_seg_data, method = "euclidean")
as.matrix(dist)[1:5,1:5]
# hierarchical clustering
set.seed(1990)
clust <- hclust(dist, method = "ward.D2")
plot(clust)
# cutree 4
h_cluster <- cutree(clust, 4)
rect.hclust(clust, k=4, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
# cutree 3
plot(clust)
h_cluster <- cutree(clust, 3)
rect.hclust(clust, k=3, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
h_cluster
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
#  rename those clusters according to their characteristics
h_cluster <- factor(h_cluster,levels = c(1,2,3),labels = c("Perf.", "Comfort", "Appearance"))
#  focus on a given cluster
plot(cut(as.dendrogram(clust), h=9)$lower[[3]])
# Number of Clusters, we must use only 5 variables out of 6 to avoid collinearity issues.
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="ward.D2")
# Targeting the Clusters/segments  Demographics
install.packages("gmodels")
library(gmodels)
install.packages("gmodels")
CrossTable(seg_data$MBA,h_cluster,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
install.packages("gmodels")
# Targeting the Clusters/segments  Choice
CrossTable(h_cluster, seg_data$Choice, prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = F)
install.packages("NbClust")
projectdir <- "E:/towork/study/r-studio/projects/marketsegmentation"
setwd(projectdir)
getwd()
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
View(seg_data)
View(seg_data)
setwd("E:/towork/study/r-studio/projects/marketsegmentation")
getwd()
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
head(seg_data)
# standardization and matrix of distance
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
View(std_seg_data)
dist <- dist(std_seg_data, method = "euclidean")
as.matrix(dist)[1:5,1:5]
# hierarchical clustering
set.seed(1990)
clust <- hclust(dist, method = "ward.D2")
plot(clust)
# cutree 4
h_cluster <- cutree(clust, 4)
rect.hclust(clust, k=4, border="red") #Draws rectangles around the branches of a dendrogram
View(clust)
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
View(hclust_summary)
hclust_summary
# cutree 3
plot(clust)
h_cluster <- cutree(clust, 3)
rect.hclust(clust, k=3, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
#  rename those clusters according to their characteristics
h_cluster <- factor(h_cluster,levels = c(1,2,3),labels = c("Perf.", "Comfort", "Appearance"))
#  focus on a given cluster
plot(cut(as.dendrogram(clust), h=9)$lower[[3]])
# Number of Clusters, we must use only 5 variables out of 6 to avoid collinearity issues.
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="ward.D2")
CrossTable(seg_data$MBA,h_cluster,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
# Targeting the Clusters/segments  Demographics
install.packages("gmodels")
library(gmodels) #Compute and display confidence intervals for model estimates.
CrossTable(seg_data$MBA,h_cluster,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
# Targeting the Clusters/segments  Choice
CrossTable(h_cluster, seg_data$Choice, prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = F)
head(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
#  algorithm works on our data for 3 segments
set.seed(1990)
car_Cluster3 <-kmeans(std_seg_data, 3, iter.max=100,nstart=100)
car_Cluster3
#  rename those clusters according to their characteristics
Kmean_Cluster<-factor(car_Cluster3$cluster,levels = c(1,2,3),labels = c("Perf. KM", "Comfort KM", "Appearance KM"))
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="kmeans")
# Demographics
library(gmodels)
CrossTable(seg_data$MBA,Kmean_Cluster,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# Choice
CrossTable(Kmean_Cluster,seg_data$Choice,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
View(hclust_summary)
View(clust)
View(car_Cluster3)
View(seg_data)
View(std_seg_data)
# Latent class clust
# aims to maximize the likelihood
library(mclust)
library(NbClust)
head(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
# Find the optimal model
set.seed(1990)
mclustBIC(std_seg_data[,1:5],verbose=F)
# obtain more details about the optimal model and mclust
set.seed(1990)
# obtain more details about the optimal model and mclust
set.seed(1990)
lca_clust <- Mclust(std_seg_data[,1:5],verbose = FALSE)
View(lca_clust)
summary(lca_clust)
View(lca_clust)
# interpret each cluster and rename
lca_clusters <- lca_clust$classification
# interpret each cluster and rename
lca_clusters <- lca_clust$classification
lca_clust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")],by=list(lca_clusters),FUN=mean)
lca_clust_summary
View(lca_clust)
lca_clusters<-factor(lca_clusters,levels = c(1,2),labels = c("Reliability LCA", "Comfort LCA"))
# Demographics
library(gmodels)
CrossTable(seg_data$MBA,lca_clusters,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# Choice
CrossTable(lca_clusters,seg_data$Choice,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
# compare with Hierarchical Clustering
CrossTable(h_cluster,lca_clusters,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# compare with K-Means Clustering
CrossTable(Kmean_Cluster,lca_clusters,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
View(seg_data)
View(std_seg_data)
View(seg_data)
View(lca_clust_summary)
View(lca_clust)
setwd("E:/towork/study/r-studio/projects/marketsegmentation")
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
head(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
View(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
dist <- dist(std_seg_data, method = "euclidean")
as.matrix(dist)[1:5,1:5]
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
dist <- dist(std_seg_data, method = "euclidean")
as.matrix(dist)[1:5,1:5]
# hierarchical clustering
set.seed(1990)
clust <- hclust(dist, method = "ward.D2")
plot(clust)
# cutree 4
h_cluster <- cutree(clust, 4)
rect.hclust(clust, k=4, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
# cutree 3
plot(clust)
h_cluster <- cutree(clust, 3)
rect.hclust(clust, k=3, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
setwd("E:/towork/study/r-studio/projects/marketsegmentation")
install.packages("NbClust")
projectdir <- "E:/towork/study/r-studio/projects/marketsegmentation"
setwd(projectdir)
getwd()
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
head(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
dist <- dist(std_seg_data, method = "euclidean")
as.matrix(dist)[1:5,1:5]
# hierarchical clustering
set.seed(1990)
clust <- hclust(dist, method = "ward.D2")
plot(clust)
# cutree 4
h_cluster <- cutree(clust, 4)
rect.hclust(clust, k=4, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
# cutree 3
plot(clust)
h_cluster <- cutree(clust, 3)
rect.hclust(clust, k=3, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
#  rename those clusters according to their characteristics
h_cluster <- factor(h_cluster,levels = c(1,2,3),labels = c("Perf.", "Comfort", "Appearance"))
#  focus on a given cluster
plot(cut(as.dendrogram(clust), h=9)$lower[[3]])
# Number of Clusters, we must use only 5 variables out of 6 to avoid collinearity issues.
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="ward.D2")
hclust_summary
#  rename those clusters according to their characteristics
h_cluster <- factor(h_cluster,levels = c(1,2,3),labels = c("Perf.", "Comfort", "Appearance"))
attributes(hclust_summary)
seg_data$cluster <- h_cluster
head(seg_data)
# cutree 3
plot(clust)
h_cluster <- cutree(clust, 3)
rect.hclust(clust, k=3, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
seg_data$cluster <- h_cluster
head(seg_data)
#  rename those clusters according to their characteristics
h_cluster <- factor(h_cluster,levels = c(1,2,3),labels = c("Perf.", "Comfort", "Appearance"))
#  focus on a given cluster
plot(cut(as.dendrogram(clust), h=9)$lower[[3]])
# Number of Clusters, we must use only 5 variables out of 6 to avoid collinearity issues.
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="ward.D2")
# Targeting the Clusters/segments  Demographics
install.packages("gmodels")
library(gmodels)
CrossTable(seg_data$MBA,h_cluster,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
# Targeting the Clusters/segments  Choice
CrossTable(h_cluster, seg_data$Choice, prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = F)
# which isnot statistically proved
# which isnot statistically proved
# which isnot statistically proved
setwd("E:/towork/study/r-studio/projects/marketsegmentation")
setwd("E:/towork/study/r-studio/projects/marketsegmentation")
# hierarchical clustring
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
str(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
dist <- dist(std_seg_data, method = "euclidean")
# kmeans clustring
# specify in advance the number of clusters
projectdir <- "C:/rezawork/study/r-studio/edx-marketing analytics/week2-marketsegmentation"
setwd("E:/towork/study/r-studio/projects/marketsegmentation")
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
str(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
# the optimal number of segments
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="kmeans")
#  algorithm works on our data for 3 segments
set.seed(1990)
car_Cluster3 <-kmeans(std_seg_data, 3, iter.max=100,nstart=100)
car_Cluster3
# matrix from factoextra
distance <- get_dist (std_seg_data)
# matrix from factoextra
library(cluster)
distance <- get_dist (std_seg_data)
# matrix from factoextra
library(factoextra)
distance <- get_dist (std_seg_data)
rm distance
rm (distance)
dist <- get_dist (std_seg_data)
fviz_dist(dist, gradient = list(low="#00AFBB", mid = "white", high = "#FC4E07"))
# the optimal number of segments
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="kmeans")
# remove any missing
seg_data <- na.omit(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
# matrix from factoextra
library(factoextra)
dist <- get_dist (std_seg_data)
fviz_dist(dist, gradient = list(low="#00AFBB", mid = "white", high = "#FC4E07"))
# the optimal number of segments
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="kmeans")
#  algorithm works on our data for 3 segments
set.seed(1990)
car_Cluster3 <-kmeans(std_seg_data, 3, iter.max=100,nstart=100)
car_Cluster3 <-kmeans(std_seg_data, 3, iter.max=100,nstart=100)
car_Cluster3
#  rename those clusters according to their characteristics
Kmean_Cluster<-factor(car_Cluster3$cluster,levels = c(1,2,3),labels = c("Perf. KM", "Comfort KM", "Appearance KM"))
str(Kmean_Cluster)
attributes(Kmean_Cluster)
car_Cluster3
attributes(car_Cluster3)
str(car_Cluster3)
# Demographics
library(gmodels)
CrossTable(seg_data$MBA,Kmean_Cluster,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# Choice
CrossTable(Kmean_Cluster,seg_data$Choice,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
# allocating membors to cluster
seg_data$cluster <- car_Cluster3
# allocating membors to cluster
seg_data$cluster <- car_Cluster3$cluster
View(seg_data)
View(seg_data)
attributes(Kmean_Cluster)
seg_data$clustername <- Kmean_Cluster&levels
seg_data$clustername <- Kmean_Cluster$levels
seg_data$clustername <- Kmean_Cluster
View(seg_data)
# Demographics
library(gmodels)
CrossTable(seg_data$MBA,Kmean_Cluster,prop.chisq = FALSE, prop.r = T, prop.c = T, prop.t = F,chisq = T)
# Choice
CrossTable(Kmean_Cluster,seg_data$Choice,prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = T)
# Demographics
library(gmodels)
setwd("E:/towork/study/r-studio/projects/marketsegmentation")
seg_data <- read.csv(file = "SegmentationData.csv",row.names=1)
str(seg_data)
# standardization
std_seg_data <- scale(seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness", "Performance", "Comfort")])
dist <- dist(std_seg_data, method = "euclidean")
as.matrix(dist)[1:5,1:5]
View(seg_data)
fviz_dist(dist)
fviz_dist(dist, gradient = list(low="#00AFBB", mid = "white", high = "#FC4E07"))
as.matrix(dist)[1:10,1:10]
as.matrix(dist)[1:5,1:5]
# hierarchical clustering
set.seed(1990)
clust <- hclust(dist, method = "ward.D2")
plot(clust)
# cutree 4
h_cluster <- cutree(clust, 4)
rect.hclust(clust, k=4, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
h_cluster
summary(h_cluster)
hclust_summary
# cutree 3
plot(clust)
h_cluster <- cutree(clust, 3)
rect.hclust(clust, k=3, border="red")
table(h_cluster)
#the clustering variables means by cluster
hclust_summary <- aggregate(std_seg_data[,c("Trendy", "Styling", "Reliability", "Sportiness",
"Performance", "Comfort")],by=list(h_cluster),FUN=mean)
hclust_summary
hclust_summary
#  rename those clusters according to their characteristics
h_cluster <- factor(h_cluster,levels = c(1,2,3),labels = c("Perf.", "Comfort", "Appearance"))
#  focus on a given cluster
plot(cut(as.dendrogram(clust), h=9)$lower[[3]])
# Number of Clusters, we must use only 5 variables out of 6 to avoid collinearity issues.
library(NbClust)
set.seed(1990)
NbClust(data=std_seg_data[,1:5], min.nc=3, max.nc=15, index="all", method="ward.D2")
# Targeting the Clusters/segments  Demographics
install.packages("gmodels")
install.packages("gmodels")
library(gmodels)
# Targeting the Clusters/segments  Choice
CrossTable(h_cluster, seg_data$Choice, prop.chisq = FALSE, prop.r = T, prop.c = T,prop.t = F,chisq = F)
# allocating membors to cluster
seg_data$cluster <- h_cluster$cluster
# allocating membors to cluster
seg_data$cluster <- h_cluster
View(seg_data)
